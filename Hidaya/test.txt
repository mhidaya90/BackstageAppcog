import { createBackendPlugin } from '@backstage/backend-plugin-api';
import { createRouter } from './router';
import { coreServices } from '@backstage/backend-plugin-api';

export const bitrisePlugin = createBackendPlugin({
  pluginId: 'bitrise',
  register(env) {
    env.registerInit({
      deps: {
        logger: coreServices.logger,
        config: coreServices.rootConfig,
        httpRouter: coreServices.httpRouter,
      },
      async init({ logger, config, httpRouter }) {
        httpRouter.use('/bitrise', await createRouter({ logger, config }));
      },
    });
  },
});



export async function createRouter(options: {
  logger: LoggerService;
  config: Config;
}): Promise<Router> {
  const { logger, config } = options;
  const router = Router();

  router.get('/health', (_, res) => {
    res.json({ status: 'Bitrise plugin is healthy' });
  });

  return router;
}
