import { flowsourceBitrisePlugin } from './plugin';
import { coreServices } from '@backstage/backend-plugin-api';
import { catalogServiceRef } from '@backstage/plugin-catalog-node';

describe('flowsourceBitrisePlugin', () => {
  it('should register and initialize the plugin correctly', async () => {
    const registerInitMock = jest.fn();

    const env = {
      registerInit: registerInitMock,
    };

    flowsourceBitrisePlugin.register(env);

    expect(registerInitMock).toHaveBeenCalled();

    const initConfig = registerInitMock.mock.calls[0][0];
    expect(initConfig.deps).toHaveProperty('logger', coreServices.logger);
    expect(initConfig.deps).toHaveProperty('httpRouter', coreServices.httpRouter);
    expect(initConfig.deps).toHaveProperty('catalog', catalogServiceRef);
    expect(typeof initConfig.init).toBe('function');
  });
});
